name: CI - Build and Push Images

on:
  push:
    branches: [ "main" ]
  
  workflow_dispatch: {}

env:
  REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
  BACKEND_IMAGE_NAME: vote-app

jobs:
  build_and_push:
    name: Build, Scan, and Push Backend Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install -r app/requirements.txt

      - name: Build Backend Docker image
        run: docker build ./app -t ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}

      # --- This is the new Docker Scout section ---
      - name: Login to Docker Hub for Scout
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Scan Backend Image with Docker Scout
        uses: docker/scout-action@v1
        with:
          # Tell Scout to scan for vulnerabilities
          command: cves
          # The image we just built
          image: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
          # CRITICAL: This makes the workflow fail if vulnerabilities are found
          exit-code: true
          # Only fail for vulnerabilities of these severities
          only-severities: critical,high
      # --- End of the new Docker Scout section ---

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login to ACR
        run: docker login ${{ env.REGISTRY }} -u ${{ secrets.ACR_NAME }} -p ${{ secrets.ACR_PASSWORD }}
      
      - name: Push Backend Image to ACR
        run: docker push ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}