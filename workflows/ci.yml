name: CI - Test, Scan and Build

on:
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_NAME: vote-app

jobs:
  test-and-scan:
    name: Test, Scan & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install -r app/requirements.txt
      
      # We would add pytest tests here if we had a tests/ directory
      # - name: Run tests
      #   run: pytest

      - name: Build Docker image
        run: docker build ./app -t $REGISTRY/$IMAGE_NAME:${{ github.sha }}

      - name: Scan image for vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$REGISTRY/$IMAGE_NAME:${{ github.sha }}'
          format: 'table'
          exit-code: '1' # Fail the build if critical vulnerabilities are found
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  build-and-push:
    name: Build and Push to ACR
    runs-on: ubuntu-latest
    needs: test-and-scan # Run only if the previous job succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.REGISTRY }}

      - name: Build and Push image
        run: |
          docker build ./app -t $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}